// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	mentee "be12/mentutor/features/mentee"

	mock "github.com/stretchr/testify/mock"
)

// RepoInterface is an autogenerated mock type for the RepoInterface type
type RepoInterface struct {
	mock.Mock
}

// EditProfile provides a mock function with given fields: id, data
func (_m *RepoInterface) EditProfile(id uint, data mentee.MenteeCore) (mentee.MenteeCore, error) {
	ret := _m.Called(id, data)

	var r0 mentee.MenteeCore
	if rf, ok := ret.Get(0).(func(uint, mentee.MenteeCore) mentee.MenteeCore); ok {
		r0 = rf(id, data)
	} else {
		r0 = ret.Get(0).(mentee.MenteeCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, mentee.MenteeCore) error); ok {
		r1 = rf(id, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRepoInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepoInterface creates a new instance of RepoInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepoInterface(t mockConstructorTestingTNewRepoInterface) *RepoInterface {
	mock := &RepoInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
